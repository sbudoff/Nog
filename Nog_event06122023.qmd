---
title: "NOG"
subtitle: "Observing Plasticity in Fine and Course Motor Tasks"
format: revealjs
editor: visual
---

# Fine Motor Plasticity

-   Plasticity is the ability for the brain to learn new tasks

# Fine Motor Plasticity

-   Plasticity is the ability for the brain to learn new tasks

-   Famous examples include stroke patients relearning skills after consistent physical therapy

# Fine Motor Plasticity

-   Plasticity is the ability for the brain to learn new tasks

-   Famous examples include stroke patients relearning skills after consistent physical therapy Can we observe plasticity on Fine Motor Tasks?

-   Question: Can we use the Mirror Box to observe plasticity in the healthy brain?

# Fine Motor Plasticity

-   Plasticity is the ability for the brain to learn new tasks

-   Famous examples include stroke patients relearning skills after consistent physical therapy Can we observe plasticity on Fine Motor Tasks?

-   Question: Can we use the Mirror Box to observe plasticity in the healthy brain performing a fine motor task?

-   Null Hypothesis: If we can not observe plasticity with the mirror box, we should see the same average performance every time we try to draw shapes in the Mirror Box

## Mirror Box Results

```{r setup, include=FALSE}
knitr::opts_chunk$set(warning = FALSE, message = FALSE, echo = TRUE)
```

```{r init, include=FALSE}
library(tidyverse)
```

```{r data, echo=FALSE}
mirror_df <- data.frame('Student' = 1:20,
                        'Shape' = as.character(1:4),
                        'Trial 1' = runif(20,5,10),
                        'Trial 2' = runif(20,5,7),
                        'Trial 3' = runif(20,2,6),
                        'Trial 4' = runif(20,1,6))
mirror_df <- mirror_df %>%
  gather(key="Trial", value="Time (s)", -Student, -Shape) %>%
  mutate(Practice = as.numeric(gsub("\\D", "", Trial)))

mirror_model <- lm(`Time (s)` ~ Practice, data = mirror_df) 

intercept_mirror <- mirror_model$coefficients[1]
beta_mirror <- mirror_model$coefficients[2]
set.seed(18)

mirror_df %>%
  ggplot(aes(x=Trial, y=`Time (s)`)) +
    geom_jitter(aes(color=Shape)) +
    ggtitle("Time to Trace Figure in Mirorr Box") +
    theme_minimal() +
    theme(legend.position = 'None')
```

## Mirror Box Result Distributions

```{r graph1, echo=FALSE}
set.seed(18)
mirror_df %>%
  ggplot(aes(x=Trial, y=`Time (s)`)) +
    geom_violin() +
    geom_jitter(aes(color=Shape)) +
    ggtitle("Time to Trace Figure in Mirorr Box") +
    theme_minimal() +
    theme(legend.position = 'None')
```

## Mirror Box Results Statistics

Time = `r beta_mirror`\*Position + `r intercept_mirror`

```{r stats1, echo=FALSE}
summary(mirror_model)
```

## Mirror Box Results Statistics

Time = `r beta_mirror`\*Position + `r intercept_mirror`

```{r graph2, echo=FALSE}
mirror_df %>%
  mutate(Prediction = intercept_mirror + beta_mirror*Practice) %>%
  ggplot(aes(x=Practice)) +
    geom_point(aes( y=`Time (s)`)) +
    geom_line(aes(y=Prediction)) +
    ggtitle("Learning Rate in Mirror Box") +
    theme_minimal() +
    theme(legend.position = 'None')
```

## Mirror Box Results Statistics

### Accounting for the shape being drawn

```{r stats2, echo=FALSE}
mirror_df <- mirror_df %>%
  mutate(Shape.1 = Shape == 1,
         Shape.2 = Shape == 2,
         Shape.3 = Shape == 3)
  

mirror_model2 <- lm(`Time (s)` ~ Practice + Shape.1 + Shape.2 + Shape.3, data = mirror_df) 

intercept_mirror <- mirror_model2$coefficients[1]
beta_mirror_1 <- mirror_model2$coefficients[2]
beta_mirror_2 <- mirror_model2$coefficients[3]
beta_mirror_3 <- mirror_model2$coefficients[4]
beta_mirror_4 <- mirror_model2$coefficients[5]
```

Time = `r beta_mirror_1`\*Position + `r intercept_mirror` + Shape

```{r stats_rez2, echo=FALSE}
summary(mirror_model2)
```

## Mirror Box Results Statistics

### Accounting for the shape being drawn

Time = `r beta_mirror_1`\*Position + `r intercept_mirror` + Shape

```{r graph3, echo=FALSE}
mirror_df %>%
  mutate(Prediction = intercept_mirror + beta_mirror_1*Practice + beta_mirror_2*Shape.1 + beta_mirror_3*Shape.2 + beta_mirror_4*Shape.3) %>%
  ggplot(aes(x=Practice, group=Shape, color = Shape)) +
    geom_point(aes(y=`Time (s)`)) +
    geom_line(aes(y=Prediction)) +
    ggtitle("Learning Rate in Mirror Box Considering Shape") +
    theme_minimal() +
    theme(legend.position = 'None') +
    facet_wrap(~Shape)
```

## Mirror Box Results Statistics

### Accounting for the shape being drawn

Time = `r beta_mirror_1`\*Position + `r intercept_mirror` + Shape

```{r graph4, echo=FALSE}
mirror_df %>%
  mutate(Prediction = intercept_mirror + beta_mirror_1*Practice + beta_mirror_2*Shape.1 + beta_mirror_3*Shape.2 + beta_mirror_4*Shape.3) %>%
  ggplot(aes(x=Practice, group=Shape, color = Shape)) +
    geom_point(aes(y=`Time (s)`)) +
    geom_line(aes(y=Prediction)) +
    ggtitle("Learning Rate in Mirror Box Considering Shape") +
    theme_minimal() +
    theme(legend.position = 'None')
```

# Coarse Motor Plasticity

-   Question: Can we use the cornhole and dizzy goggles to observe plasticity in the healthy brain performing a coarse motor task?

-   Null Hypothesis: If we can not observe plasticity with the dizzy goggles, we should see the same average score every time we try to get the beanbags in

## Cornhole Results


```{r data2ch, echo=FALSE}
ch_df <- data.frame('Student' = 1:20,
                        'Trial 1' = runif(20,5,10),
                        'Trial 2' = runif(20,5,7),
                        'Trial 3' = runif(20,2,6),
                        'Trial 4' = runif(20,1,6))
ch_df <- ch_df %>%
  gather(key="Trial", value="Score", -Student) %>%
  mutate(Practice = as.numeric(gsub("\\D", "", Trial)))

ch_model <- lm(Score ~ Practice, data = ch_df) 

intercept_ch <- ch_model$coefficients[1]
beta_ch <- ch_model$coefficients[2]
set.seed(18)

ch_df %>%
  ggplot(aes(x=Trial, y=Score)) +
    geom_jitter() +
    ggtitle("Score as a function of attempts") +
    theme_minimal() +
    theme(legend.position = 'None')
```

## Cornhole Result Distributions

```{r graph1ch, echo=FALSE}
set.seed(18)
ch_df %>%
  ggplot(aes(x=Trial, y=Score)) +
    geom_violin() +
    geom_jitter() +
    ggtitle("Distribution of scores as a function of attempts") +
    theme_minimal() +
    theme(legend.position = 'None')
```

## Cornhole Results Statistics

Score = `r beta_ch`\*Practice + `r intercept_ch`

```{r stats1ch, echo=FALSE}
summary(ch_model)
```

## Cornhole Results Statistics

Score = `r beta_ch`\*Practice + `r intercept_ch`

```{r graph2ch, echo=FALSE}
ch_df %>%
  mutate(Prediction = intercept_ch + beta_ch*Practice) %>%
  ggplot(aes(x=Practice)) +
    geom_point(aes( y=Score)) +
    geom_line(aes(y=Prediction)) +
    ggtitle("Cornhole Learning Rate") +
    theme_minimal() +
    theme(legend.position = 'None')
```
